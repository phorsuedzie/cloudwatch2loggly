'use strict';

const util = require('util');

const foreman_pattern = /^\d+:\d+:\d+ +(\w+\.\d+) +\| +(.*)$/;
const rails_pattern =
    /^[A-Z], +\[\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+ #(\d+)\] +([A-Z]+) +-- +: +(.*)$/;
const rails_tags_pattern = /^\[((([^\]]+)(\] \[)?)*)\] +(.*)$/

const LogEventParser = {
  parse: (logEvent, logGroupName, logStreamName) => {
    var result = {
      logGroupName,
      logStreamName,
      timestamp: new Date(logEvent.timestamp).toISOString(),
    };
    var message = logEvent.message.trim();
    var foreman_match = message.match(foreman_pattern);
    if (foreman_match) {
      result.foreman_process = foreman_match[1];
      message = foreman_match[2];
    }
    if (message.startsWith("{") && message.endsWith("}")) {
      util._extend(result, JSON.parse(message));
    } else {
      var rails_match = message.match(rails_pattern);
      if (rails_match) {
        result.pid = rails_match[1];
        result.log_level = rails_match[2];
        message = rails_match[3];

        var tags_match = message.match(rails_tags_pattern);
        if (tags_match) {
          result.log_tags = tags_match[1].split("] [");
          message = tags_match[5];
        }
      }
      result.message = message;
    }
    return result;
  }
};

module.exports = LogEventParser;
